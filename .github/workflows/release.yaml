name: release

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: releaseTag to set 1.2.3, 1.2.3-dev, 1.2.3-beta, etc. or auto version will be set
        required: false
      draftTag:
        description: draftTag with the release notes. Can be found at the release page. E.g. untagged-777fe0c3b1edc8bd78f6
        required: true
      makeLatestRelease:
        type: boolean
        description: github:latestRelease
        required: true
      preRelease:
        type: boolean
        description: artifacthub:preRelease
        required: true
      containsSecurityUpdates:
        type: boolean
        description: artifacthub:containsSecurityUpdates
        required: true
      swear:
        description: I solemnly swear that the inputs are correct and I run the workflow from the correct branch! 
        type: choice
        options: 
        - "yes"
        - "yes, I do"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get version
        id: version
        uses: codacy/git-version@2.8.0
        with:
          prefix: v
          minor-identifier: /feat(ure)*:/
          major-identifier: /breaking:/

      - name: Set package version
        id: set_version
        env:
          VERSION: ${{ steps.version.outputs.version }}
          INPUT_VERSION: ${{ inputs.releaseTag }}
        run: |
          if [[ $INPUT_VERSION ]]; then
            VERSION=$INPUT_VERSION
          fi

          VERSION=`echo $VERSION | sed "s|SNAPSHOT|$GITHUB_REF_NAME|"`
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          VERSION_WITHOUT=`echo $VERSION | sed 's/^v//1'`
          out="$(echo "${{ steps.auto_version.outputs.version }}" | sed 's/^v//1')"

          cd charts/csi-wekafsplugin
          
          yq -i '.version = "'$VERSION_WITHOUT'"' Chart.yaml
          yq -i '.appVersion = "'$VERSION'"' Chart.yaml
          yq -i '.csiDriverVersion = "'$VERSION_WITHOUT'"' values.yaml
          yq -i '.sources[0] = "'https://github.com/weka/csi-wekafs/tree/$VERSION'"' Chart.yaml
          yq -i '.annotations."artifacthub.io/prerelease" = "'${{ inputs.preRelease }}'"' Chart.yaml
          yq -i '.annotations."artifacthub.io/containsSecurityUpdates" = "'${{ inputs.containsSecurityUpdates }}'"' Chart.yaml

          echo ------------------ values ------------------
          cat values.yaml
          echo --------------------chart ------------------
          cat Chart.yaml

      - name: Update RELEASE.md
        env:
          VERSION: ${{ steps.set_version.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release view ${{inputs.draftTag}} --json body | jq -r .body > changelog

          sed '$d' changelog > changelog1 # delete last line

          # insert release note at the beginning
          # sed doesn't work well here

          echo "# Release $VERSION" >> CHANGELOG.md
          cat changelog1 >> CHANGELOG.md
          cat RELEASE.md >> CHANGELOG.md

          # release note will taken from here by helm/chart-releaser-action
          cat changelog1 > charts/csi-wekafsplugin/CHANGELOG.md
          mv CHANGELOG.md RELEASE.md





      - name: helm-docs
        uses: addnab/docker-run-action@v3
        with:
          image: jnorwood/helm-docs:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            cd /data
            helm-docs -s file -c charts -o ../../README.md -t ../README.md.gotmpl 
            helm-docs -s file -c charts


      - uses: stefanzweifel/git-auto-commit-action@v4 
        with:
          commit_message: Release ${{ steps.set_version.outputs.version }}


